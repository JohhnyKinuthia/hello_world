# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
executors:
  aws-executor:
    docker:
      - image: amazon/aws-cli
jobs:
  create_infrastructure:
    executor: aws-executor
    working_directory: /tmp/ansible/
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - run:
          name: Create CloudFormation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      - run:
          name: Get IP address of EC2 instances
          command: |
            echo "[aws]" >> inventory.cfg
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --output text >> inventory.cfg
            cat inventory.cfg
      - persist_to_workspace:
          root: /tmp/ansible/
          paths:
            - inventory.cfg
  configure_infrastructure:
    docker:
      - image: cimg/python:3.8
    working_directory: /tmp/ansible/
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/ansible/
      - add_ssh_keys:
          fingerprints:
            - "2a:cd:12:a2:74:23:81:3c:98:cf:da:84:fd:9b:41:06"
      - run:
          name: Install ansible
          command: |
            sudo apt-get update
            sudo apt-get install software-properties-common
            sudo apt-add-repository --yes --update ppa:ansible/ansible
            sudo apt-get install ansible
      - run:
          name: Configure server
          command: |
            export ANSIBLE_HOST_KEY_CHECKING=False
            cat inventory.cfg
            ansible-playbook -i inventory.cfg playbook.yml
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - smoke_test
